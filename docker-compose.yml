version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: your_strong_root_password # 修改我
      MYSQL_DATABASE: your_database_name        # 修改我
      MYSQL_USER: your_db_username              # 修改我
      MYSQL_PASSWORD: your_db_password            # 修改我
    volumes:
      - db_data:/var/lib/mysql
    ports: # 可选: 暴露端口给调试工具
      - "3307:3306" # 将容器3306映射到宿主机3307，避免冲突
    networks:
      - app-network

  backend:
    build:
      context: ./backend # 构建上下文是 backend 文件夹
      dockerfile: Dockerfile # 使用 ./backend 目录下的 Dockerfile
    container_name: mindflow_backend
    restart: unless-stopped
    depends_on:
      - db # 依赖数据库
    environment:
      # 传递数据库凭证 (使用服务名 'db')
      DB_URL: jdbc:mysql://db:3306/${MYSQL_DATABASE}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
    # 不需要外部端口，Nginx 会进行代理
    networks:
      - app-network

  nginx:
    build:
      context: . # 重要: 构建上下文是项目的根目录
      dockerfile: nginx/Dockerfile # 指定位于根上下文内 nginx/ 目录下的 Dockerfile
    container_name: mindflow_nginx_proxy
    restart: unless-stopped
    ports:
      - "80:80" # 将 Nginx 容器的 80 端口映射到宿主机的 80 端口
    depends_on:
      - backend # 依赖后端 API 可用 (用于代理)
    networks:
      - app-network

volumes:
  db_data:

# 用于容器间通信的自定义桥接网络
networks:
  app-network:
    driver: bridge
